var ut=Object.defineProperty;var ct=(e,t,s)=>t in e?ut(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var p=(e,t,s)=>ct(e,typeof t!="symbol"?t+"":t,s);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))o(i);new MutationObserver(i=>{for(const n of i)if(n.type==="childList")for(const l of n.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function s(i){const n={};return i.integrity&&(n.integrity=i.integrity),i.referrerPolicy&&(n.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?n.credentials="include":i.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function o(i){if(i.ep)return;i.ep=!0;const n=s(i);fetch(i.href,n)}})();const v=(e,t)=>Math.random()*(t-e)+e,yt=(e,t)=>Math.floor(v(e,t)),q=(e,t,s)=>Math.max(t,Math.min(s,e)),C=(e,t)=>{const s=e.x-t.x,o=e.y-t.y;return s*s+o*o},pt=e=>Math.hypot(e.x,e.y),ot=e=>{const t=pt(e)||1;return{x:e.x/t,y:e.y/t}},nt=(e,t)=>({x:e.x-t.x,y:e.y-t.y}),u=32,w={w:240*u,h:240*u},B={x:w.w/2,y:w.h/2},b={sky:"#0a0e14",ground:"#0e161f",colonist:"#c7f9cc",enemy:"#ff9aa2",tree:"#6fbf73",rock:"#9aa5b1",ghost:"#6ee7ff",wall:"#9aa5b1",bld:"#93c5fd",turret:"#93c5fd",farm:"#8bd3dd",house:"#e2b714",stock:"#c084fc",tent:"#f59e0b"},tt={start:.72,end:.07};function wt(){const e=Math.ceil(w.w/u),t=Math.ceil(w.h/u);return{cols:e,rows:t,solid:new Uint8Array(e*t),cost:new Float32Array(e*t).fill(1)}}function gt(e){e.solid.fill(0),e.cost.fill(1)}function kt(e,t,s,o,i){const n=Math.floor(t/u),l=Math.floor(s/u),a=Math.ceil(o/u),r=Math.ceil(i/u);for(let f=0;f<r;f++)for(let h=0;h<a;h++){const d=n+h,c=l+f;d<0||c<0||d>=e.cols||c>=e.rows||(e.solid[c*e.cols+d]=1)}}function mt(e,t,s,o,i,n){const l=Math.floor(t/u),a=Math.floor(s/u),r=Math.ceil(o/u),f=Math.ceil(i/u);for(let h=0;h<f;h++)for(let d=0;d<r;d++){const c=l+d,y=a+h;if(c<0||y<0||c>=e.cols||y>=e.rows)continue;const g=y*e.cols+c;e.cost[g]=Math.min(e.cost[g],n)}}function et(e,t,s,o){return Math.abs(e-s)+Math.abs(t-o)}function xt(e,t,s,o,i){const n=e.cols,l=e.rows,a={x:Math.floor(t/u),y:Math.floor(s/u)},r={x:Math.floor(o/u),y:Math.floor(i/u)},f=(k,M)=>M*n+k;if(a.x===r.x&&a.y===r.y)return[{x:o,y:i}];const h=[],d=new Int32Array(n*l).fill(-1),c=new Int32Array(n*l).fill(1e9),y=new Int32Array(n*l).fill(1e9),g=(k,M)=>{const H=f(k,M);h.push(H)},A=()=>{let k=0,M=1e9;for(let x=0;x<h.length;x++){const F=y[h[x]];F<M&&(M=F,k=x)}return h.splice(k,1)[0]},S=(k,M)=>k>=0&&M>=0&&k<n&&M<l,R=f(a.x,a.y),m=f(r.x,r.y),E=(k,M)=>{if(!S(k,M))return!1;const H=f(k,M);return H===R||H===m?!0:e.solid[H]===0};c[R]=0,y[R]=et(a.x,a.y,r.x,r.y),g(a.x,a.y);const T=[[1,0],[-1,0],[0,1],[0,-1]];for(;h.length;){const k=A(),M=k%n,H=k/n|0;if(M===r.x&&H===r.y){let x=[],F=k;for(;F!==-1;){const D=F%n,O=F/n|0;x.push({x:D*u+u/2,y:O*u+u/2}),F=d[F]}x.reverse(),x[x.length-1]={x:o,y:i};const N=[],L=(D,O,lt,at)=>{const X=lt-D,J=at-O,rt=Math.hypot(X,J)||1,ht=Math.max(6,u*.33),V=Math.ceil(rt/ht);for(let U=1;U<V;U++){const Z=U/V,ft=D+X*Z,dt=O+J*Z,j=Math.floor(ft/u),Q=Math.floor(dt/u);if(j<0||Q<0||j>=e.cols||Q>=e.rows||e.solid[Q*e.cols+j])return!1}return!0};let P=0;for(;P<x.length;){N.push(x[P]);let D=P+2,O=P+1;for(;D<x.length&&L(x[P].x,x[P].y,x[D].x,x[D].y);)O=D,D++;P=O}return N.length>=2&&(x=N),x}for(const[x,F]of T){const N=M+x,L=H+F;if(!E(N,L))continue;const P=f(N,L),D=e.cost[P]||1,O=c[k]+D;O<c[P]&&(d[P]=k,c[P]=O,y[P]=O+et(N,L,r.x,r.y),h.includes(P)||h.push(P))}}return null}const I={house:{category:"Housing",name:"House",key:"1",cost:{wood:20,stone:5},hp:220,size:{w:2,h:2},build:100,color:b.house,popCap:2},farm:{category:"Production",name:"Farm",key:"2",cost:{wood:15},hp:120,size:{w:2,h:2},build:80,color:b.farm,growTime:1},turret:{category:"Defense",name:"Turret",key:"3",cost:{wood:10,stone:20},hp:160,size:{w:1,h:1},build:120,color:b.turret,range:190,fireRate:.6,dps:30},wall:{category:"Defense",name:"Wall",key:"4",cost:{wood:5,stone:5},hp:150,size:{w:1,h:1},build:40,color:b.wall},stock:{category:"Utility",name:"Stockpile",key:"5",cost:{wood:10},hp:140,size:{w:2,h:2},build:60,color:b.stock},tent:{category:"Utility",name:"Recruit Tent",key:"6",cost:{wood:30,food:10},hp:140,size:{w:2,h:2},build:80,color:b.tent},warehouse:{category:"Utility",name:"Warehouse",key:"7",cost:{wood:40,stone:20},hp:260,size:{w:3,h:2},build:160,color:b.stock},well:{category:"Production",name:"Well",key:"8",cost:{stone:25},hp:160,size:{w:1,h:1},build:80,color:b.farm,prodKind:"food",prodRateSec:.2},infirmary:{category:"Utility",name:"Infirmary",key:"9",cost:{wood:30,stone:20,food:10},hp:200,size:{w:2,h:2},build:140,color:b.bld,healRate:3,healRange:140},path:{category:"Utility",name:"Path",key:"0",cost:{wood:1},hp:1,size:{w:1,h:1},build:5,color:"#475569"}};function $(e,t){if(!t)return!0;for(const s of Object.keys(t))if((e[s]||0)<(t[s]||0))return!1;return!0}function Y(e,t){if(t)for(const s of Object.keys(t))e[s]-=t[s]||0}function _(e,t,s){const o=I[e],i=Math.floor(t/u)*u,n=Math.floor(s/u)*u;return{kind:e,...o,x:i,y:n,w:o.size.w*u,h:o.size.h*u,hp:o.hp,buildLeft:o.build,done:!1,growth:0,ready:!1,cooldown:0}}function bt(e){const t={};for(const s of Object.keys(e)){const o=e[s],i=o.category||"Other";(t[i]||(t[i]=[])).push([s,o])}for(const s of Object.keys(t))t[s].sort((o,i)=>o[1].name.localeCompare(i[1].name));return t}function St(e,t){e.setTransform(1,0,0,1,0,0),e.fillStyle=b.sky,e.fillRect(0,0,t.width,t.height)}function Mt(e,t){e.translate(-t.x*t.zoom,-t.y*t.zoom),e.scale(t.zoom,t.zoom)}function vt(e){e.fillStyle=b.ground,e.fillRect(0,0,w.w,w.h),e.globalAlpha=.08,e.strokeStyle="#d6e4ff",e.lineWidth=1,e.beginPath();for(let t=0;t<=w.w;t+=u)e.moveTo(t,0),e.lineTo(t,w.h);for(let t=0;t<=w.h;t+=u)e.moveTo(0,t),e.lineTo(w.w,t);e.stroke(),e.globalAlpha=1}function K(e,t,s,o,i){e.fillStyle=i,e.beginPath(),e.arc(t,s,o,0,Math.PI*2),e.fill()}function Rt(e,t,s,o,i,n,l=0){e.fillStyle=n,e.beginPath();for(let a=0;a<i;a++){const r=l+a*2*Math.PI/i,f=t+Math.cos(r)*o,h=s+Math.sin(r)*o;a===0?e.moveTo(f,h):e.lineTo(f,h)}e.closePath(),e.fill()}function st(e,t,s,o=10,i=b.colonist){e.save(),e.translate(t,s);const n="#0b0f14",l=o*.32,a=-o*.3;e.fillStyle=i,e.beginPath(),e.arc(0,a,l,0,Math.PI*2),e.fill(),e.strokeStyle=n,e.lineWidth=1,e.beginPath(),e.arc(0,a,l+.5,0,Math.PI*2),e.stroke();const r=o*.55,f=o*.55,h=-o*.05;e.fillStyle=i,e.beginPath(),e.moveTo(-r/2,h-f/2),e.lineTo(r/2,h-f/2),e.lineTo(r/2,h+f/2),e.lineTo(-r/2,h+f/2),e.closePath(),e.fill(),e.strokeStyle=n,e.stroke();const d=o*.18,c=o*.5,y=h+f/2+c*.1;e.fillStyle=i,e.fillRect(-d-.6,y-c,d,c),e.fillRect(.6,y-c,d,c),e.strokeStyle=n,e.strokeRect(-d-.6,y-c,d,c),e.strokeRect(.6,y-c,d,c),e.restore()}function Tt(e,t,s,o=12,i="#60a5fa"){e.save(),e.translate(t,s),e.fillStyle=i,e.strokeStyle="#0b0f14",e.lineWidth=1,e.beginPath();const n=o,l=o*1.2;e.moveTo(0,-l*.5),e.lineTo(n*.35,-l*.25),e.lineTo(n*.35,l*.1),e.quadraticCurveTo(0,l*.55,-n*.35,l*.1),e.lineTo(-n*.35,-l*.25),e.closePath(),e.fill(),e.stroke(),e.restore()}function Pt(e,t){if(t.kind==="path"){e.fillStyle="#1f2937",e.fillRect(t.x,t.y,t.w,t.h),e.strokeStyle="#0b0f14cc",e.strokeRect(t.x+.5,t.y+.5,t.w-1,t.h-1);return}if(e.fillStyle=t.color,e.fillRect(t.x,t.y,t.w,t.h),e.strokeStyle="#0b0f14cc",e.strokeRect(t.x+.5,t.y+.5,t.w-1,t.h-1),!t.done){e.fillStyle="#0b1220",e.fillRect(t.x,t.y-6,t.w,4),e.fillStyle="#6ee7ff";const n=1-t.buildLeft/t.build;e.fillRect(t.x,t.y-6,n*t.w,4)}e.fillStyle="#0b0f14aa",e.font="bold 12px system-ui";const s=t.x+t.w/2,o=t.y+t.h/2;let i="B";t.kind==="hq"?i="HQ":t.kind==="house"?i="H":t.kind==="farm"?i=t.ready?"F*":"F":t.kind==="turret"?i="T":t.kind==="wall"?i="W":t.kind==="stock"?i="S":t.kind==="tent"?i="R":t.kind==="warehouse"?i="WH":t.kind==="well"?i="WL":t.kind==="infirmary"&&(i="I"),e.textAlign="center",e.textBaseline="middle",e.fillText(i,s,o),t.kind==="turret"&&t.range&&(e.globalAlpha=.07,e.fillStyle="#e2f3ff",e.beginPath(),e.arc(s,o,t.range,0,Math.PI*2),e.fill(),e.globalAlpha=1)}function Ct(e,t){for(const s of t)e.globalAlpha=.8,e.strokeStyle="#e0f2fe",e.lineWidth=2,e.beginPath(),e.moveTo(s.x,s.y),e.lineTo(s.tx,s.ty),e.stroke(),e.globalAlpha=1}function Bt(e,t,s){const n=t.width;e.fillStyle="#0b122088",e.fillRect(0,0,n,34),e.strokeStyle="#1e293b",e.lineWidth=1,e.strokeRect(0,.5,n,34),e.fillStyle="#dbeafe",e.font="600 14px system-ui,Segoe UI,Roboto";let l=10;z(e,l,8,`Wood: ${s.res.wood|0}`,"#b08968"),l+=140,z(e,l,8,`Stone: ${s.res.stone|0}`,"#9aa5b1"),l+=150,z(e,l,8,`Food: ${s.res.food|0}`,"#9ae6b4"),l+=140;const a=`Colonists: ${s.colonists}/${s.cap}`;z(e,l,8,a,"#93c5fd"),l+=190;const r=`Hiding: ${s.hiding}`;z(e,l,8,r,"#60a5fa"),l+=120;const f=`Day ${s.day} — ${s.tDay*24|0}:00 ${s.isNight?"🌙":"☀️"}`;z(e,l,8,f,s.isNight?"#ffd166":"#6ee7ff");const h=t.height-46,d=150;l=10,e.fillStyle="#0b122088",e.fillRect(0,h,t.width,46),e.strokeStyle="#1e293b",e.strokeRect(0,h+.5,t.width,46),e.font="500 13px system-ui,Segoe UI,Roboto";for(let y=0;y<s.hotbar.length;y++){const g=s.hotbar[y];It(e,l+2,h+6,d-6,34,`${y+1}. ${g.name}`,g.cost,g.selected),l+=d}let c=40;for(let y=s.messages.length-1;y>=0;y--){const g=s.messages[y];Dt(e,n-360,c,g.text),c+=22}}function z(e,t,s,o,i){const n=e.measureText(o).width+18,l=20;e.fillStyle="#0f172a",e.fillRect(t,s,n,l),e.strokeStyle="#1e293b",e.strokeRect(t+.5,s+.5,n-1,l-1),e.fillStyle=i,e.fillRect(t+2,s+2,6,l-4),e.fillStyle="#dbeafe",e.fillText(o,t+12,s+14)}function It(e,t,s,o,i,n,l,a){e.fillStyle=a?"#102034":"#0f172a",e.fillRect(t,s,o,i),e.strokeStyle=a?"#4b9fff":"#1e293b",e.strokeRect(t+.5,s+.5,o-1,i-1),e.fillStyle="#dbeafe",e.fillText(n,t+8,s+20),e.fillStyle="#9fb3c8",e.fillText(l,t+o-48,s+20)}function Dt(e,t,s,o){e.fillStyle="#0f172aee",e.fillRect(t,s,340,20),e.strokeStyle="#1e293b",e.strokeRect(t+.5,s+.5,339,19),e.fillStyle="#dbeafe",e.fillText(o,t+8,s+14)}function Ot(e,t,s){if(!t.alive)return;t.t+=s,t.state||(t.state="seekTask"),t.stateSince=(t.stateSince||0)+s,t.hunger=Math.min(100,(t.hunger||0)+s*1.2),t.inside?t.fatigue=Math.max(0,(t.fatigue||0)-s*12):t.fatigue=Math.min(100,(t.fatigue||0)+s*4);const o=e.enemies.find(i=>C(i,t)<140*140);switch(t.lastHp=t.lastHp??t.hp,t.hp<t.lastHp&&(t.hurt=1.5),t.lastHp=t.hp,t.hurt=Math.max(0,(t.hurt||0)-s),!t.inside&&o&&t.state!=="flee"&&(t.state="flee",t.stateSince=0),!t.inside&&!o&&e.isNight()&&t.state!=="sleep"&&t.state!=="flee"&&(t.state="sleep",t.stateSince=0),t.inside&&t.state!=="resting"&&(t.state="resting",t.stateSince=0),t.state){case"resting":{t.hideTimer=Math.max(0,(t.hideTimer||0)-s),t.hp=Math.min(100,t.hp+4*s),!e.isNight()&&!o&&(t.hurt||0)<=0&&(t.hideTimer||0)<=0&&(e.leaveBuilding(t),t.safeTarget=null,t.safeTimer=0,t.state="seekTask",t.stateSince=0);break}case"flee":{let i=null,n=null;const l=o?e.findSafeTurret(t,o):null;if(l){const a=l.range||120,r=e.centerOf(l),f=e.buildings.find(h=>h.kind==="house"&&h.done&&e.buildingHasSpace(h)&&C(e.centerOf(h),r)<a*a);f&&(n=f,i=e.centerOf(f))}if(!i){const a=e.buildings.find(r=>r.kind==="hq"&&e.buildingHasSpace(r));a&&(n=a,i=e.centerOf(a))}if(!i&&l&&(i=e.centerOf(l)),i){const a=e.moveAlongPath(t,s,i,20),r=n?t.x>=n.x-8&&t.x<=n.x+n.w+8&&t.y>=n.y-8&&t.y<=n.y+n.h+8:!1;if(a||r)if(n&&e.tryEnterBuilding(t,n))t.hideTimer=3,t.state="resting",t.stateSince=0;else{const f=e.buildings.filter(h=>h.done&&e.buildingHasSpace(h)&&(h.kind==="house"||h.kind==="hq"));if(f.length){const h=f.sort((c,y)=>C(t,e.centerOf(c))-C(t,e.centerOf(y)))[0],d=e.centerOf(h);e.clearPath(t),n=h,i=d}}}else{const a=ot(nt(t,o));t.x+=a.x*(t.speed+90)*s,t.y+=a.y*(t.speed+90)*s}o||(t.state="seekTask",t.stateSince=0);break}case"sleep":{const i=e.buildings.filter(h=>h.kind==="house"&&h.done&&e.isProtectedByTurret(h)&&e.buildingHasSpace(h));if(!e.isNight()||i.length===0){t.state="seekTask",t.stateSince=0;break}let n=i[0],l=C(t,e.centerOf(n));for(let h=1;h<i.length;h++){const d=C(t,e.centerOf(i[h]));d<l&&(l=d,n=i[h])}const a=e.centerOf(n),r=e.moveAlongPath(t,s,a,20),f=t.x>=n.x-8&&t.x<=n.x+n.w+8&&t.y>=n.y-8&&t.y<=n.y+n.h+8;if(r||f)if(e.tryEnterBuilding(t,n))t.hideTimer=0,t.state="resting",t.stateSince=0;else{const h=e.buildings.filter(d=>d.done&&e.buildingHasSpace(d)&&(d.kind==="house"||d.kind==="hq")).sort((d,c)=>C(t,e.centerOf(d))-C(t,e.centerOf(c)))[0];h?(e.centerOf(h),e.clearPath(t)):(t.state="seekTask",t.stateSince=0)}break}case"seekTask":{if(e.isNight()){t.state="sleep",t.stateSince=0;break}switch((!t.task||t.task==="idle"&&Math.random()<.005)&&e.pickTask(t),t.task){case"build":t.state="build";break;case"harvestFarm":t.state="harvest";break;case"chop":t.state="chop";break;case"mine":t.state="mine";break;case"idle":default:t.state="idle";break}t.stateSince=0;break}case"idle":{const i=t.target;if(!i){t.state="seekTask";break}e.moveAlongPath(t,s,i,8)&&(t.task=null,t.target=null,e.clearPath(t),t.state="seekTask",t.stateSince=0);break}case"build":{const i=t.target;if(!i||i.done){e.releaseBuildReservation(t),t.task=null,t.target=null,e.clearPath(t),t.state="seekTask";break}const n={x:i.x+i.w/2,y:i.y+i.h/2};e.moveAlongPath(t,s,n,12)&&(i.buildLeft-=25*s,i.buildLeft<=0&&(i.done=!0,i.kind==="farm"&&(i.growth=0,i.ready=!1),e.msg(i.name?i.name+" complete":"Building complete"),e.rebuildNavGrid(),e.clearPath(t),e.releaseBuildReservation(t),t.task=null,t.target=null,t.state="seekTask"));break}case"harvest":{const i=t.target;if(!i||!i.ready){t.task=null,t.target=null,e.clearPath(t),t.state="seekTask";break}const n={x:i.x+i.w/2,y:i.y+i.h/2};e.moveAlongPath(t,s,n,12)&&(i.ready=!1,i.growth=0,e.RES.food+=10,e.msg("Farm harvested (+10 food)"),t.task=null,t.target=null,e.clearPath(t),t.state="seekTask");break}case"chop":{const i=t.target;if(!i||i.hp<=0){i&&e.assignedTargets.has(i)&&e.assignedTargets.delete(i),t.task=null,t.target=null,e.clearPath(t),t.state="seekTask";break}const n=(i.r||12)+t.r+4;if(Math.hypot(t.x-i.x,t.y-i.y)<=n+2.5){i.hp-=18*s,i.hp<=0&&(e.RES.wood+=6,e.trees.splice(e.trees.indexOf(i),1),e.assignedTargets.has(i)&&e.assignedTargets.delete(i),e.msg("+6 wood"),t.task=null,t.target=null,e.clearPath(t),t.state="seekTask");break}const r=e.bestApproachToCircle(t,i,n);e.moveAlongPath(t,s,r,3),t.stateSince&&t.stateSince>10&&(e.assignedTargets.has(i)&&e.assignedTargets.delete(i),t.task=null,t.target=null,e.clearPath(t),t.state="seekTask");break}case"mine":{const i=t.target;if(!i||i.hp<=0){i&&e.assignedTargets.has(i)&&e.assignedTargets.delete(i),t.task=null,t.target=null,e.clearPath(t),t.state="seekTask";break}const n=(i.r||12)+t.r+4;if(Math.hypot(t.x-i.x,t.y-i.y)<=n+2.5){i.hp-=16*s,i.hp<=0&&(e.RES.stone+=5,e.rocks.splice(e.rocks.indexOf(i),1),e.assignedTargets.has(i)&&e.assignedTargets.delete(i),e.msg("+5 stone"),t.task=null,t.target=null,e.clearPath(t),t.state="seekTask");break}const r=e.bestApproachToCircle(t,i,n);e.moveAlongPath(t,s,r,3),t.stateSince&&t.stateSince>10&&(e.assignedTargets.has(i)&&e.assignedTargets.delete(i),t.task=null,t.target=null,e.clearPath(t),t.state="seekTask");break}}for(const i of e.colonists){if(i===t)continue;const n=t.x-i.x,l=t.y-i.y,a=n*n+l*l,r=(t.r+2)*(t.r+2);if(a>0&&a<r*4){const f=Math.sqrt(a)||1,h=(r*2-f)*.5;t.x+=n/f*h*s*6,t.y+=l/f*h*s*6}}}function At(e,t,s){const o=e.buildings.find(r=>r.kind==="hq");let i=o,n=C(t,e.centerOf(o));for(const r of e.colonists){const f=C(t,r);f<n&&(n=f,i=r)}const l=i.w?e.centerOf(i):i,a=ot(nt(l,t));if(t.x+=a.x*t.speed*s,t.y+=a.y*t.speed*s,i.w){const r=i;e.pointInRect(t,r)&&(r.hp-=t.dmg*s),r.hp<=0&&(r.kind==="hq"?e.lose():(e.evictColonistsFrom(r),e.buildings.splice(e.buildings.indexOf(r),1),e.msg((r.name||r.kind)+" destroyed","warn")))}else{const r=i;Math.hypot(t.x-r.x,t.y-r.y)<t.r+8&&(r.hp-=t.dmg*s,r.hp<=0&&(r.alive=!1,e.colonists.splice(e.colonists.indexOf(r),1),e.msg("A colonist has fallen","warn")))}}class Et{constructor(t){p(this,"canvas");p(this,"ctx");p(this,"DPR",1);p(this,"camera",{x:0,y:0,zoom:1});p(this,"RES",{wood:0,stone:0,food:0});p(this,"day",1);p(this,"tDay",0);p(this,"dayLength",180);p(this,"fastForward",1);p(this,"paused",!1);p(this,"prevIsNight",!1);p(this,"colonists",[]);p(this,"enemies",[]);p(this,"trees",[]);p(this,"rocks",[]);p(this,"buildings",[]);p(this,"bullets",[]);p(this,"messages",[]);p(this,"selectedBuild","house");p(this,"hotbar",["house","farm","turret","wall","stock","tent","warehouse","well","infirmary"]);p(this,"showBuildMenu",!1);p(this,"debug",{nav:!1,paths:!0});p(this,"selColonist",null);p(this,"follow",!1);p(this,"keyState",{});p(this,"once",new Set);p(this,"mouse",{x:0,y:0,wx:0,wy:0,down:!1,rdown:!1});p(this,"lastPaintCell",null);p(this,"eraseDragStart",null);p(this,"menuRects",[]);p(this,"handleResize",()=>{const t=window.innerWidth,s=window.innerHeight-48;this.canvas.style.width=t+"px",this.canvas.style.height=s+"px",this.canvas.width=Math.floor(t*this.DPR),this.canvas.height=Math.floor(s*this.DPR)});p(this,"screenToWorld",(t,s)=>({x:t*this.DPR/this.camera.zoom+this.camera.x,y:s*this.DPR/this.camera.zoom+this.camera.y}));p(this,"respawnTimer",0);p(this,"assignedTargets",new WeakSet);p(this,"buildReservations",new Map);p(this,"insideCounts",new Map);p(this,"last",performance.now());p(this,"frame",t=>{const s=Math.min(.033,(t-this.last)/1e3);this.last=t,this.update(s),this.draw(),requestAnimationFrame(this.frame)});p(this,"grid",wt());const s=t.getContext("2d");if(!s)throw new Error("no ctx");this.canvas=t,this.ctx=s,this.DPR=Math.max(1,Math.min(2,window.devicePixelRatio||1)),this.handleResize(),window.addEventListener("resize",()=>this.handleResize()),this.bindInput(),this.newGame(),this.rebuildNavGrid(),requestAnimationFrame(this.frame)}bindInput(){const t=this.canvas;t.addEventListener("mousemove",s=>{const o=t.getBoundingClientRect();this.mouse.x=s.clientX-o.left,this.mouse.y=s.clientY-o.top;const i=this.screenToWorld(this.mouse.x,this.mouse.y);this.mouse.wx=i.x,this.mouse.wy=i.y,this.mouse.down&&(this.selectedBuild==="path"?this.paintPathAtMouse():this.selectedBuild==="wall"&&this.paintWallAtMouse())}),t.addEventListener("mousedown",s=>{if(s.button===0){if(this.mouse.down=!0,this.showBuildMenu){this.handleBuildMenuClick();return}if(this.selectedBuild==="path")this.paintPathAtMouse(!0);else if(this.selectedBuild==="wall")this.paintWallAtMouse(!0);else{const o=this.findColonistAt(this.mouse.wx,this.mouse.wy);o?(this.selColonist=o,this.follow=!0):this.placeAtMouse()}}if(s.button===2){if(this.mouse.rdown=!0,this.showBuildMenu){this.showBuildMenu=!1;return}this.eraseDragStart={x:this.mouse.wx,y:this.mouse.wy}}}),t.addEventListener("mouseup",s=>{if(s.button===0&&(this.mouse.down=!1,this.lastPaintCell=null),s.button===2){if(this.eraseDragStart){const o=Math.min(this.eraseDragStart.x,this.mouse.wx),i=Math.min(this.eraseDragStart.y,this.mouse.wy),n=Math.max(this.eraseDragStart.x,this.mouse.wx),l=Math.max(this.eraseDragStart.y,this.mouse.wy);(n-o)*(l-i)<12*12?this.cancelOrErase():this.eraseInRect({x:o,y:i,w:n-o,h:l-i})}this.mouse.rdown=!1,this.eraseDragStart=null}}),t.addEventListener("contextmenu",s=>s.preventDefault()),window.addEventListener("keydown",s=>{const o=s.key.toLowerCase();this.keyState[o]=!0,this.once.has(o)||this.once.add(o)}),window.addEventListener("keyup",s=>{this.keyState[s.key.toLowerCase()]=!1})}findColonistAt(t,s){for(let o=this.colonists.length-1;o>=0;o--){const i=this.colonists[o];if(!i.alive||i.inside)continue;if((i.x-t)*(i.x-t)+(i.y-s)*(i.y-s)<=(i.r+2)*(i.r+2))return i}return null}msg(t,s="info"){this.messages.push({text:t,t:4,kind:s}),this.toast(t,1600)}toast(t,s=1400){const o=document.getElementById("toast");o&&(o.textContent=t,o.style.opacity="1",clearTimeout(o._t),o._t=setTimeout(()=>o.style.opacity="0",s))}scatter(){for(let t=0;t<220;t++){const s={x:v(80,w.w-80),y:v(80,w.h-80)};Math.hypot(s.x-B.x,s.y-B.y)<220||this.trees.push({x:s.x,y:s.y,r:12,hp:40,type:"tree"})}for(let t=0;t<140;t++){const s={x:v(80,w.w-80),y:v(80,w.h-80)};Math.hypot(s.x-B.x,s.y-B.y)<200||this.rocks.push({x:s.x,y:s.y,r:12,hp:50,type:"rock"})}}tryRespawn(t){if(this.respawnTimer+=t*this.fastForward,this.respawnTimer>=4){this.respawnTimer=0;const s=o=>{for(let i=0;i<6;i++){const n={x:v(60,w.w-60),y:v(60,w.h-60)};if(Math.hypot(n.x-B.x,n.y-B.y)<200)continue;let l=!0;for(const a of this.buildings)if(n.x>a.x-24&&n.x<a.x+a.w+24&&n.y>a.y-24&&n.y<a.y+a.h+24){l=!1;break}if(l){o==="tree"?this.trees.push({x:n.x,y:n.y,r:12,hp:40,type:"tree"}):this.rocks.push({x:n.x,y:n.y,r:12,hp:50,type:"rock"});break}}};Math.random()<.5&&this.trees.length<260&&s("tree"),Math.random()<.35&&this.rocks.length<180&&s("rock")}}buildHQ(){const t={w:3*u,h:3*u},s={kind:"hq",name:"HQ",x:B.x-t.w/2,y:B.y-t.h/2,w:t.w,h:t.h,hp:600,done:!0,color:b.bld,size:{w:3,h:3},build:0,buildLeft:0};this.buildings.push(s),this.rebuildNavGrid()}newGame(){this.colonists.length=this.enemies.length=this.trees.length=this.rocks.length=this.buildings.length=this.bullets.length=this.messages.length=0,this.buildReservations.clear(),this.insideCounts.clear(),this.RES.wood=50,this.RES.stone=30,this.RES.food=20,this.day=1,this.tDay=0,this.fastForward=1,this.camera.zoom=1,this.camera.x=B.x-this.canvas.width/(2*this.camera.zoom),this.camera.y=B.y-this.canvas.height/(2*this.camera.zoom),this.buildHQ(),this.scatter();for(let t=0;t<3;t++){const s=v(0,Math.PI*2),o=80+v(-10,10);this.spawnColonist({x:B.x+Math.cos(s)*o,y:B.y+Math.sin(s)*o})}this.msg("Welcome! Build farms before night, then turrets.")}spawnColonist(t){const s={x:t.x,y:t.y,r:8,hp:100,speed:50,task:null,target:null,carrying:null,hunger:0,alive:!0,color:b.colonist,t:v(0,1)};return this.colonists.push(s),s}spawnEnemy(){const t=yt(0,4);let s,o;t===0?(s=v(0,w.w),o=-80):t===1?(s=v(0,w.w),o=w.h+80):t===2?(s=-80,o=v(0,w.h)):(s=w.w+80,o=v(0,w.h));const i={x:s,y:o,r:9,hp:60+this.day*6,speed:48+this.day*2,dmg:8+this.day,target:null,color:b.enemy};return this.enemies.push(i),i}canPlace(t,s,o){const i={x:s,y:o,w:t.size.w*u,h:t.size.h*u};if(i.x<0||i.y<0||i.x+i.w>w.w||i.y+i.h>w.h)return!1;for(const l of this.buildings)if(!(i.x+i.w<=l.x||i.x>=l.x+l.w||i.y+i.h<=l.y||i.y>=l.y+l.h))return!1;const n=(l,a)=>{const r=Math.max(a.x,Math.min(l.x,a.x+a.w)),f=Math.max(a.y,Math.min(l.y,a.y+a.h)),h=l.x-r,d=l.y-f;return h*h+d*d<=l.r*l.r};for(const l of this.trees)if(n(l,i))return!1;for(const l of this.rocks)if(n(l,i))return!1;return!0}placeAtMouse(){if(this.paused)return;const t=this.selectedBuild;if(!t)return;const s=I[t];if(!s)return;const o=_(t,this.mouse.wx,this.mouse.wy);if(!this.canPlace(o,o.x,o.y)){this.toast("Can't place here");return}if(!$(this.RES,s.cost)){this.toast("Not enough resources");return}if(Y(this.RES,s.cost),o.kind!=="path")for(let i=this.buildings.length-1;i>=0;i--){const n=this.buildings[i];n.kind==="path"&&!(o.x+o.w<=n.x||o.x>=n.x+n.w||o.y+o.h<=n.y||o.y>=n.y+n.h)&&this.buildings.splice(i,1)}this.buildings.push(o),this.rebuildNavGrid()}paintPathAtMouse(t=!1){const s=Math.floor(this.mouse.wx/u),o=Math.floor(this.mouse.wy/u);if(!t&&this.lastPaintCell&&this.lastPaintCell.gx===s&&this.lastPaintCell.gy===o)return;const i=(g,A)=>{const S=g*u+1,R=A*u+1,m=_("path",S,R);!this.buildings.some(T=>T.kind==="path"&&T.x===m.x&&T.y===m.y)&&$(this.RES,I.path.cost)&&(Y(this.RES,I.path.cost),this.buildings.push(m))};if(this.lastPaintCell==null){i(s,o),this.lastPaintCell={gx:s,gy:o},this.rebuildNavGrid();return}let n=this.lastPaintCell.gx,l=this.lastPaintCell.gy,a=s,r=o;const f=Math.abs(a-n),h=Math.abs(r-l),d=n<a?1:-1,c=l<r?1:-1;let y=f-h;for(;i(n,l),!(n===a&&l===r);){const g=2*y;g>-h&&(y-=h,n+=d),g<f&&(y+=f,l+=c)}this.lastPaintCell={gx:s,gy:o},this.rebuildNavGrid()}paintWallAtMouse(t=!1){const s=Math.floor(this.mouse.wx/u),o=Math.floor(this.mouse.wy/u);if(!t&&this.lastPaintCell&&this.lastPaintCell.gx===s&&this.lastPaintCell.gy===o)return;const i=(g,A)=>{const S=g*u+1,R=A*u+1,m=_("wall",S,R);this.buildings.some(T=>T.kind==="wall"&&T.x===m.x&&T.y===m.y)||$(this.RES,I.wall.cost)&&this.canPlace(m,m.x,m.y)&&(Y(this.RES,I.wall.cost),this.buildings.push(m))};if(this.lastPaintCell==null){i(s,o),this.lastPaintCell={gx:s,gy:o},this.rebuildNavGrid();return}let n=this.lastPaintCell.gx,l=this.lastPaintCell.gy,a=s,r=o;const f=Math.abs(a-n),h=Math.abs(r-l),d=n<a?1:-1,c=l<r?1:-1;let y=f-h;for(;i(n,l),!(n===a&&l===r);){const g=2*y;g>-h&&(y-=h,n+=d),g<f&&(y+=f,l+=c)}this.lastPaintCell={gx:s,gy:o},this.rebuildNavGrid()}eraseInRect(t){const s=this.buildings.length;for(let i=this.buildings.length-1;i>=0;i--){const n=this.buildings[i];if(n.kind==="hq")continue;!(t.x+t.w<=n.x||t.x>=n.x+n.w||t.y+t.h<=n.y||t.y>=n.y+n.h)&&(this.evictColonistsFrom(n),this.buildings.splice(i,1),this.buildReservations.delete(n),this.insideCounts.delete(n))}const o=s-this.buildings.length;o>0&&(this.msg(`Removed ${o} structure(s)`),this.rebuildNavGrid())}cancelOrErase(){const t={x:this.mouse.wx,y:this.mouse.wy};for(let s=this.buildings.length-1;s>=0;s--){const o=this.buildings[s];if(o.kind!=="hq"&&t.x>=o.x&&t.x<=o.x+o.w&&t.y>=o.y&&t.y<=o.y+o.h){this.evictColonistsFrom(o),this.buildings.splice(s,1),this.msg("Building removed"),this.rebuildNavGrid();return}}this.selectedBuild=null,this.toast("Build canceled")}evictColonistsFrom(t){const s=t.x+t.w/2,o=t.y+t.h/2;for(const i of this.colonists)if(i.inside===t){this.leaveBuilding(i),i.safeTarget=null,i.safeTimer=0;const n=Math.random()*Math.PI*2,l=(t.w/2+10)*Math.cos(n),a=(t.h/2+10)*Math.sin(n);i.x=q(s+l,0,w.w),i.y=q(o+a,0,w.h)}}buildingCapacity(t){return t.kind==="hq"?8:t.kind==="house"?3:1}buildingHasSpace(t){const s=this.buildingCapacity(t);return(this.insideCounts.get(t)||0)<s}tryEnterBuilding(t,s){return!s.done||!this.buildingHasSpace(s)?!1:(this.insideCounts.set(s,(this.insideCounts.get(s)||0)+1),t.inside=s,t.hideTimer=0,!0)}leaveBuilding(t){const s=t.inside;if(s){const o=(this.insideCounts.get(s)||1)-1;o<=0?this.insideCounts.delete(s):this.insideCounts.set(s,o)}t.inside=null,t.hideTimer=0}getMaxCrew(t){const s=t.w/u*(t.h/u);return s<=1?1:s<=4?2:3}releaseBuildReservation(t){if(!t.reservedBuildFor)return;const s=t.reservedBuildFor,o=(this.buildReservations.get(s)||1)-1;o<=0?this.buildReservations.delete(s):this.buildReservations.set(s,o),t.reservedBuildFor=null}clearPath(t){t.path=void 0,t.pathIndex=void 0,t.repath=0}setTask(t,s,o){if(t.target&&t.target.type&&this.assignedTargets.has(t.target)&&this.assignedTargets.delete(t.target),t.reservedBuildFor&&t.reservedBuildFor!==o&&this.releaseBuildReservation(t),t.task=s,t.target=o,this.clearPath(t),o&&o.type&&(o.type==="tree"||o.type==="rock")&&this.assignedTargets.add(o),s==="build"&&o&&o.w!=null&&!t.reservedBuildFor){const i=o,n=this.buildReservations.get(i)||0,l=this.getMaxCrew(i);n<l&&(this.buildReservations.set(i,n+1),t.reservedBuildFor=i)}}pickTask(t){let s=null,o=1/0;for(const n of this.buildings){if(n.done||(this.buildReservations.get(n)||0)>=this.getMaxCrew(n))continue;const a=C({x:t.x,y:t.y},this.centerOf(n));a<o&&(o=a,s=n)}if(s){this.setTask(t,"build",s);return}const i=this.buildings.find(n=>n.kind==="farm"&&n.done&&n.ready);if(i){this.setTask(t,"harvestFarm",i);return}if(this.RES.food<Math.max(4,this.colonists.length*2)){const n=this.nearestCircle({x:t.x,y:t.y},this.trees.filter(l=>!this.assignedTargets.has(l)));if(n){this.setTask(t,"chop",n);return}}if(this.RES.wood<this.RES.stone){const n=this.nearestCircle({x:t.x,y:t.y},this.trees.filter(l=>!this.assignedTargets.has(l)));if(n){this.setTask(t,"chop",n);return}}else{const n=this.nearestCircle({x:t.x,y:t.y},this.rocks.filter(l=>!this.assignedTargets.has(l)));if(n){this.setTask(t,"mine",n);return}}this.setTask(t,"idle",{x:t.x+v(-80,80),y:t.y+v(-80,80)})}nearestCircle(t,s){let o=null,i=1e9;for(const n of s){const l=C(t,n);l<i&&(i=l,o=n)}return o}moveAlongPath(t,s,o,i=10){t.repath=(t.repath||0)-s;const n=o&&(!t.pathGoal||Math.hypot(t.pathGoal.x-o.x,t.pathGoal.y-o.y)>12);if(o&&(n||t.repath==null||t.repath<=0||!t.path||t.pathIndex==null)){const d=this.computePath(t.x,t.y,o.x,o.y);d&&d.length&&(t.path=d,t.pathIndex=0,t.pathGoal={x:o.x,y:o.y}),t.repath=2}if(!t.path||t.pathIndex==null||t.pathIndex>=t.path.length)return o?Math.hypot(t.x-o.x,t.y-o.y)<=i:!1;const l=t.path[t.pathIndex],a=l.x-t.x,r=l.y-t.y,f=Math.hypot(a,r);if(f<10)return t.pathIndex++,t.pathIndex>=t.path.length?(t.path=void 0,t.pathIndex=void 0,o?Math.hypot(t.x-o.x,t.y-o.y)<=i:!0):!1;let h=t.speed;{const d=Math.floor(t.x/u),c=Math.floor(t.y/u);if(d>=0&&c>=0&&d<this.grid.cols&&c<this.grid.rows){const g=c*this.grid.cols+d;this.grid.cost[g]<=.7&&(h*=1.125)}}return t.x+=a/(f||1)*h*s,t.y+=r/(f||1)*h*s,t.x=Math.max(0,Math.min(t.x,w.w)),t.y=Math.max(0,Math.min(t.y,w.h)),!1}findSafeTurret(t,s){let o=null,i=1/0;for(const n of this.buildings){if(n.kind!=="turret"||!n.done)continue;const l=this.centerOf(n),a=Math.hypot(t.x-l.x,t.y-l.y),r=Math.hypot(s.x-l.x,s.y-l.y),f=n.range||160,h=r<f?100:0,d=a+h;d<i&&(i=d,o=n)}return o}isProtectedByTurret(t){const s=this.centerOf(t);for(const o of this.buildings){if(o.kind!=="turret"||!o.done)continue;const i=o.range||120,n=this.centerOf(o);if(C(s,n)<i*i)return!0}return!1}centerOf(t){return{x:t.x+t.w/2,y:t.y+t.h/2}}pointInRect(t,s){return t.x>=s.x&&t.x<=s.x+s.w&&t.y>=s.y&&t.y<=s.y+s.h}updateTurret(t,s){if(!("range"in t)||!t.range)return;t.cooldown=Math.max(0,(t.cooldown||0)-s);let o=null,i=1e9;const n=this.centerOf(t);for(const l of this.enemies){const a=C(l,n);a<t.range*t.range&&a<i&&(i=a,o=l)}o&&(t.cooldown||0)<=0&&(o.hp-=t.dps||0,this.bullets.push({x:n.x,y:n.y,tx:o.x,ty:o.y,t:.12}),t.cooldown=t.fireRate||.6)}isNight(){return this.tDay>=tt.start||this.tDay<=tt.end}spawnWave(){const t=4+Math.floor(this.day*1.3);for(let s=0;s<t;s++)this.spawnEnemy();this.msg(`Night ${this.day}: Enemies incoming!`,"warn")}nextDay(){this.day++,this.waveSpawnedForDay=!1;let t=0;for(let i=0;i<this.colonists.length;i++)this.RES.food>0?this.RES.food-=1:(t++,this.colonists[i]&&(this.colonists[i].alive=!1));t>0&&(this.colonists=this.colonists.filter(i=>i.alive),this.msg(`${t} colonist(s) starved`,"bad"));for(const i of this.buildings)i.kind==="farm"&&i.done&&(i.growth=(i.growth||0)+1,(i.growth||0)>=(i.growTime||0)&&(i.ready=!0));const s=this.buildings.find(i=>i.kind==="tent"&&i.done),o=(this.buildings.find(i=>i.kind==="hq")?3:0)+this.buildings.filter(i=>i.kind==="house"&&i.done).reduce((i,n)=>i+(n.popCap||0),0);s&&this.colonists.length<o&&this.RES.food>=15&&(this.RES.food-=15,this.spawnColonist({x:B.x+v(-20,20),y:B.y+v(-20,20)}),this.msg("A new colonist joined! (-15 food)","info")),this.day>8&&this.win()}dayTick(t){const s=this.isNight();this.tDay+=t*this.fastForward/this.dayLength,this.tDay>=1&&(this.tDay-=1,this.nextDay());const o=this.isNight();!s&&o&&this.spawnWave(),this.prevIsNight=o}keyPressed(t){return this.once.has(t)?(this.once.delete(t),!0):!1}update(t){if(this.keyPressed(" ")){this.paused=!this.paused;const o=document.getElementById("btnPause");o&&(o.textContent=this.paused?"Resume":"Pause")}if(this.keyPressed("h")){const o=document.getElementById("help");o&&(o.hidden=!o.hidden)}if(this.keyPressed("b")&&(this.showBuildMenu=!this.showBuildMenu),this.keyPressed("g")&&(this.debug.nav=!this.debug.nav,this.toast(this.debug.nav?"Debug: nav ON":"Debug: nav OFF")),this.keyPressed("escape")&&(this.showBuildMenu?this.showBuildMenu=!1:(this.selectedBuild=null,this.toast("Build canceled"),this.selColonist=null,this.follow=!1)),this.keyPressed("f")&&(this.fastForward=this.fastForward===1?6:1,this.toast(this.fastForward>1?"Fast-forward ON":"Fast-forward OFF")),this.paused)return;const s=360*t/this.camera.zoom;this.keyState.w&&(this.camera.y-=s),this.keyState.s&&(this.camera.y+=s),this.keyState.a&&(this.camera.x-=s),this.keyState.d&&(this.camera.x+=s),(this.keyState["+"]||this.keyState["="])&&(this.camera.zoom=Math.max(.6,Math.min(2.2,this.camera.zoom*1.02))),(this.keyState["-"]||this.keyState._)&&(this.camera.zoom=Math.max(.6,Math.min(2.2,this.camera.zoom/1.02)));for(const[o,i]of this.hotbar.entries())this.keyPressed(String(o+1))&&(this.selectedBuild=i,this.toast("Selected: "+I[i].name));if(this.follow&&this.selColonist){const o=this.selColonist,i=this.canvas.width/this.camera.zoom,n=this.canvas.height/this.camera.zoom;this.camera.x=q(o.x-i/2,0,Math.max(0,w.w-i)),this.camera.y=q(o.y-n/2,0,Math.max(0,w.h-n))}this.dayTick(t);for(const o of this.colonists)Ot(this,o,t*this.fastForward);for(let o=this.enemies.length-1;o>=0;o--){const i=this.enemies[o];At(this,i,t*this.fastForward),i.hp<=0&&(this.enemies.splice(o,1),Math.random()<.5&&(this.RES.food+=1))}for(const o of this.buildings){if(o.kind==="turret"&&o.done&&this.updateTurret(o,t*this.fastForward),o.prodKind&&o.done){const i=o.prodRateSec||0,n=o.prodKind;this.RES[n]+=i*t*this.fastForward}if(o.healRate&&o.done){const i=o.healRate,n=o.healRange||120,l=this.centerOf(o);for(const a of this.colonists)(a.x-l.x)*(a.x-l.x)+(a.y-l.y)*(a.y-l.y)<n*n&&(a.hp=Math.min(100,a.hp+i*t*this.fastForward))}}this.tryRespawn(t);for(let o=this.bullets.length-1;o>=0;o--){const i=this.bullets[o];i.t-=t,i.t<=0&&this.bullets.splice(o,1)}for(let o=this.messages.length-1;o>=0;o--){const i=this.messages[o];i.t-=t,i.t<=0&&this.messages.splice(o,1)}}draw(){const{ctx:t}=this;St(t,this.canvas),t.save(),Mt(t,this.camera),vt(t);for(const n of this.trees)K(t,n.x,n.y,n.r,b.tree);for(const n of this.rocks)K(t,n.x,n.y,n.r,b.rock);for(const n of this.buildings)if(Pt(t,n),(n.kind==="house"||n.kind==="hq")&&this.buildings.some(a=>a.kind==="turret"&&a.done&&C(this.centerOf(n),this.centerOf(a))<(a.range||120)*(a.range||120))){const a=this.centerOf(n);Tt(t,a.x,n.y-8,12,"#60a5fa")}{const n=new Map;for(const l of this.colonists)l.inside&&n.set(l.inside,(n.get(l.inside)||0)+1);t.save();for(const[l,a]of n){if(!a)continue;const r=8,f=Math.min(a,r),h=10,d=4,c=f*(h+d)-d;let y=l.x+l.w/2-c/2+h/2;const g=l.y+l.h+8,A=this.colonists.filter(S=>S.inside===l);for(let S=0;S<f;S++){const R=A[S%A.length],m=R?R.hp:100,E=m>66?"#22c55e":m>33?"#eab308":"#ef4444";st(t,y+S*(h+d),g,10,E)}if(a>r){const S=a-r,R=y+f*(h+d)+6;t.fillStyle="#dbeafe",t.font="600 11px system-ui,Segoe UI,Roboto",t.fillText("+"+S,R,g+4)}}t.restore()}for(const n of this.colonists)n.inside||K(t,n.x,n.y,n.r,this.selColonist===n?"#93c5fd":b.colonist);if(this.debug.nav){t.save(),t.globalAlpha=.18,t.fillStyle="#ef4444";for(let n=0;n<this.grid.rows;n++)for(let l=0;l<this.grid.cols;l++)this.grid.solid[n*this.grid.cols+l]&&t.fillRect(l*u,n*u,u,u);t.restore(),t.save(),t.strokeStyle="#22d3ee",t.lineWidth=2;for(const n of this.colonists)if(!(!n.path||!n.path.length)){t.beginPath(),t.moveTo(n.x,n.y);for(let l=n.pathIndex??0;l<n.path.length;l++){const a=n.path[l];t.lineTo(a.x,a.y)}t.stroke()}t.restore()}for(const n of this.enemies)Rt(t,n.x,n.y,n.r+2,3,b.enemy,-Math.PI/2);if(Ct(t,this.bullets),this.isNight()&&(t.fillStyle="rgba(6,10,18, 0.58)",t.fillRect(0,0,w.w,w.h)),this.selectedBuild){const n=I[this.selectedBuild],l=Math.floor(this.mouse.wx/u)*u,a=Math.floor(this.mouse.wy/u)*u,r=this.canPlace({...n,size:n.size},l,a)&&$(this.RES,n.cost);t.globalAlpha=.6,t.fillStyle=r?b.ghost:"#ff6b6b88",t.fillRect(l,a,n.size.w*u,n.size.h*u),t.globalAlpha=1}if(this.mouse.rdown&&this.eraseDragStart){const n=Math.min(this.eraseDragStart.x,this.mouse.wx),l=Math.min(this.eraseDragStart.y,this.mouse.wy),a=Math.abs(this.mouse.wx-this.eraseDragStart.x),r=Math.abs(this.mouse.wy-this.eraseDragStart.y);t.save(),t.globalAlpha=.18,t.fillStyle="#ef4444",t.fillRect(n,l,a,r),t.globalAlpha=1,t.strokeStyle="#ef4444",t.setLineDash([6,4]),t.strokeRect(n+.5,l+.5,a-1,r-1),t.setLineDash([]),t.restore()}t.restore();const s=(this.buildings.find(n=>n.kind==="hq")?3:0)+this.buildings.filter(n=>n.kind==="house"&&n.done).reduce((n,l)=>n+(l.popCap||0),0),o=this.colonists.filter(n=>!!n.inside).length,i=this.hotbar.map(n=>({key:String(n),name:I[n].name,cost:this.costText(I[n].cost||{}),selected:this.selectedBuild===n}));Bt(this.ctx,this.canvas,{res:this.RES,colonists:this.colonists.length,cap:s,hiding:o,day:this.day,tDay:this.tDay,isNight:this.isNight(),hotbar:i,messages:this.messages}),this.selColonist&&this.drawColonistProfile(this.selColonist),this.showBuildMenu&&this.drawBuildMenu()}costText(t){const s=[];return t.wood&&s.push(`${t.wood}w`),t.stone&&s.push(`${t.stone}s`),t.food&&s.push(`${t.food}f`),s.join(" ")}win(){this.paused=!0,this.msg("You survived! Day 8 reached.","good"),alert("You survived to Day 8 — victory!")}lose(){this.paused=!0,this.msg("HQ destroyed. Colony fell.","bad"),alert("Your HQ was destroyed. Game over.")}rebuildNavGrid(){gt(this.grid);for(const t of this.buildings)t.kind!=="hq"&&t.kind!=="path"&&kt(this.grid,t.x,t.y,t.w,t.h),t.kind==="path"&&mt(this.grid,t.x,t.y,t.w,t.h,.6)}computePath(t,s,o,i){return xt(this.grid,t,s,o,i)}cellIndexAt(t,s){const o=Math.floor(t/u),i=Math.floor(s/u);return o<0||i<0||o>=this.grid.cols||i>=this.grid.rows?-1:i*this.grid.cols+o}isBlocked(t,s){const o=this.cellIndexAt(t,s);return o<0?!0:!!this.grid.solid[o]}bestApproachToCircle(t,s,o){let i=null,n=1/0;const l=16;for(let r=0;r<l;r++){const f=r/l*Math.PI*2,h=s.x-Math.cos(f)*(o-6),d=s.y-Math.sin(f)*(o-6);if(this.isBlocked(h,d))continue;const c=(t.x-h)*(t.x-h)+(t.y-d)*(t.y-d);c<n&&(n=c,i={x:h,y:d})}if(i)return i;const a=Math.atan2(s.y-t.y,s.x-t.x);return{x:s.x-Math.cos(a)*(o-6),y:s.y-Math.sin(a)*(o-6)}}drawColonistProfile(t){const s=this.ctx,o=this.canvas.width;this.canvas.height;const i=280,n=176,l=o-i-12,a=54;s.save(),s.fillStyle="#0b1220cc",s.fillRect(l,a,i,n),s.strokeStyle="#1e293b",s.strokeRect(l+.5,a+.5,i-1,n-1);const r=l+18,f=a+26;s.fillStyle="#0f172a",s.fillRect(r,f,64,64),s.strokeStyle="#1e293b",s.strokeRect(r+.5,f+.5,63,63),s.save(),s.translate(r+32,f+36),s.scale(2,2),st(s,0,0,10,"#93c5fd"),s.restore(),s.fillStyle="#dbeafe",s.font="600 14px system-ui,Segoe UI,Roboto",s.fillText("Colonist",l+96,a+22),s.font="500 13px system-ui,Segoe UI,Roboto";const h=t.inside?"Resting":t.task?t.task:"Idle",d=Math.max(0,Math.min(100,t.hp|0)),c=Math.max(0,Math.min(100,(t.fatigue||0)|0)),y=Math.max(0,Math.min(100,(t.hunger||0)|0));this.barRow(l+96,a+40,"Health",d,"#22c55e"),this.barRow(l+96,a+64,"Tiredness",c,"#eab308"),this.barRow(l+96,a+88,"Hunger",y,"#f87171"),s.fillStyle="#9fb3c8",s.fillText(`Task: ${h}`,l+96,a+112),s.fillText(`Pos: ${t.x|0}, ${t.y|0}`,l+96,a+130),s.fillText(this.follow?"Camera: Following (Esc to stop)":"Camera: Click colonist to follow",l+96,a+148),s.restore()}barRow(t,s,o,i,n){const l=this.ctx;l.fillStyle="#dbeafe",l.fillText(o,t,s);const a=150,r=10;l.fillStyle="#0f172a",l.fillRect(t+70,s-8,a,r),l.strokeStyle="#1e293b",l.strokeRect(t+70+.5,s-8+.5,a-1,r-1),l.fillStyle=n,l.fillRect(t+70+2,s-8+2,Math.max(0,Math.min(a-4,i/100*(a-4))),r-4)}drawBuildMenu(){const t=this.ctx,s=this.canvas.width,o=this.canvas.height,i=Math.min(760,s-40),n=Math.min(440,o-80),l=(s-i)/2,a=(o-n)/2;t.save(),t.fillStyle="#0b1628dd",t.fillRect(l,a,i,n),t.strokeStyle="#1e293b",t.strokeRect(l+.5,a+.5,i-1,n-1),t.fillStyle="#dbeafe",t.font="600 16px system-ui,Segoe UI,Roboto",t.fillText("Build Menu (B to close)",l+14,a+24);const r=bt(I),f=Object.keys(r),h=Math.floor((i-24)/Math.max(1,f.length));this.menuRects=[],t.font="600 13px system-ui,Segoe UI,Roboto";for(let d=0;d<f.length;d++){const c=l+12+d*h;let y=a+44;const g=f[d];t.fillStyle="#93c5fd",t.fillText(g,c,y),y+=8;const A=r[g];for(const[S,R]of A){y+=8;const m=28,E=h-18,T=c,k=y;t.fillStyle=this.selectedBuild===S?"#102034":"#0f172a",t.fillRect(T,k,E,m),t.strokeStyle=this.selectedBuild===S?"#4b9fff":"#1e293b",t.strokeRect(T+.5,k+.5,E-1,m-1),t.fillStyle="#dbeafe",t.fillText(R.name,T+8,k+18);const M=this.costText(R.cost||{});if(t.fillStyle="#9fb3c8",t.fillText(M,T+E-Math.min(80,t.measureText(M).width+2),k+18),this.menuRects.push({key:S,x:T,y:k,w:E,h:m}),y+=m,y>a+n-34)break}}t.restore()}handleBuildMenuClick(){const t=this.mouse.x*this.DPR,s=this.mouse.y*this.DPR;for(const o of this.menuRects)if(t>=o.x&&t<=o.x+o.w&&s>=o.y&&s<=o.y+o.h){this.selectedBuild=o.key,this.showBuildMenu=!1,this.toast("Selected: "+I[o.key].name);return}this.showBuildMenu=!1}}const Ft=document.getElementById("game"),it=document.getElementById("btnPause"),Ht=document.getElementById("btnHelp"),Nt=document.getElementById("btnNew"),W=document.getElementById("help");W&&(W.innerHTML=`
    <h2>How to play</h2>
    <div><b>Goal:</b> Gather wood & stone, build farms for food, add houses for pop cap; survive nightly raids with turrets/walls.</div>
  <div><b>Controls:</b> 1..9 quick-build, <b>B</b> build menu, LMB place, RMB cancel/erase; WASD pan; Space pause; H toggle help; +/- zoom; F fast-forward.</div>
  `);const G=new Et(Ft);it.onclick=()=>{G.paused=!G.paused,it.textContent=G.paused?"Resume":"Pause"};Nt.onclick=()=>{G.newGame()};Ht.onclick=()=>{W&&(W.hidden=!W.hidden)};Object.assign(window,{game:G,BUILD_TYPES:I});
